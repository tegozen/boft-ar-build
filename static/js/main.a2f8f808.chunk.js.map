{"version":3,"sources":["js/redux/actions.js","js/redux/reducers.js","js/redux/initialState.js","js/redux/index.js","js/api.js","js/config.js","js/pages/desktop.jsx","js/components/overlay.jsx","js/components/preloader.jsx","js/components/index.js","js/components/header.jsx","js/pages/mobile.jsx","js/pages/index.js","js/pages/main.jsx","js/App.js","serviceWorker.js","index.js"],"names":["setRedux","state","Object","assign","type","newState","initialState","isPreloader","REDUX","actions","reducers","floor","Math","random","ROUTES","path","API","connect","component_","vars","dispatchState","_state","length","forEach","name","keys","key","dispatch","dispatchEvent","data","element","event","CustomEvent","detail","document","randomInt","min","max","setClasses","defaultClasses","isActiveClasses","classNames","push","map","className","filter","join","store","get","localforage","getItem","gets","arr","a","Promise","resolve","result","all","value","then","set","setItem","sets","arrObj","remove","removeItem","removes","clear","CONFIG","BASESUF","window","MARKERS","Desktop","props","onClickPrev","count","setState","onClickNext","MAX","this","alt","src","button_disabled","onClick","React","Component","Overlay","children","onClose","defaultProps","Preloader","isActiveName","isActive","html","icon","faSpinner","spin","size","COMPONENTS","Header","Mobile","permissionStatus","navigator","permissions","query","requestPermission","mediaDevices","getUserMedia","video","catch","renderError","renderDetection","vr-mode-ui","renderer","embedded","arjs","url","smooth","smoothount","smoothtolerance","smooththreshold","position","width","height","material","camera","renderRequest","isAccess","PAGES","Main","to","App","isBrowser","Boolean","location","hostname","match","createStore","__REDUX_DEVTOOLS_EXTENSION__","trace","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.a2f8f808.chunk.js","sourcesContent":["export const setRedux = (state = {}) => {\n  return (Object.assign({ type: 'redux' }, state))\n};\n\nexport default {\n  setRedux\n}","export default (state = {}, newState = {}) => {\n  return Object.assign({}, state, newState);\n};","export const initialState = {\n  isPreloader: false\n};\n\nexport default initialState;\n","import actions from './actions';\nimport reducers from './reducers';\nimport initialState from './initialState';\n\nexport const Actions = actions;\nexport const Reducers = reducers;\nexport const InitialState = initialState;\n\nexport const REDUX = {\n  actions,\n  reducers,\n  initialState\n};\n\nexport default REDUX;","import localforage from \"localforage\";\nimport REDUX from \"./redux\";\nimport { connect } from \"react-redux\";\n\nconst { floor, random } = Math;\n\nexport const ROUTES = {\n  Main: { path: \"/\" },\n  Desktop: { path: \"/desktop\" },\n  Mobile: { path: \"/mobile\" },\n};\n\nexport const dispatchEvent = (type, data = {}, element) => {\n  var event = new CustomEvent(type, {\n    detail: data\n  });\n  element ? element.dispatchEvent(event) : document.dispatchEvent(event);\n};\n\nexport const API = {\n  connect: (component_, vars = []) => {\n    const dispatchState = (state) => {\n      let _state = {};\n\n      if (vars.length) {\n        //only vars props\n        vars.forEach(name => {\n          _state[name] = state[name];\n        })\n      }\n      else {\n        //all props\n        Object.keys(state).forEach((key) => {\n          if (key !== \"type\") {\n            _state[key] = state[key];\n          }\n        });\n      }\n\n      return _state;\n    };\n\n    return connect(dispatchState, dispatch => ({\n      setRedux: state => dispatch(REDUX.actions.setRedux(state)),\n    }))(component_);\n  },\n  dispatchEvent,\n  randomInt: (min = 0, max = 1) => (floor(random() * (max - min + 1)) + min),\n  setClasses: (defaultClasses = false, isActiveClasses = false) => {\n    //defaultClasses = ['className']\n    //isActiveClasses = { className: 'condition' }\n    let classNames = [],\n      className = \"\";\n\n    //handling defaultClasses\n    if (defaultClasses) {\n      classNames = defaultClasses;\n    }\n\n    //handling active classes\n    if (isActiveClasses) {\n      classNames.push(\n        ...Object.keys(isActiveClasses)\n          .map((className) => isActiveClasses[className] && className)\n          .filter((className) => className)\n      );\n    }\n\n    //joining classes\n    className = classNames.join(\" \");\n\n    return className;\n  },\n  store: {\n    get: localforage.getItem,\n    gets: async (arr) => {\n      return new Promise((resolve) => {\n        let result = {};\n        Promise.all(\n          arr.map(async (name) => {\n            let value = await localforage.getItem(name);\n            result[name] = value;\n            return;\n          })\n        ).then(() => {\n          resolve(result);\n        });\n      });\n    },\n    set: localforage.setItem,\n    sets: async (arrObj) => {\n      await Promise.all(\n        Object.keys(arrObj).map((name) =>\n          localforage.setItem(name, arrObj[name])\n        )\n      );\n      return arrObj;\n    },\n    remove: localforage.removeItem,\n    removes: (arr) =>\n      Promise.all(arr.map(async (name) => localforage.removeItem(name))),\n    clear: localforage.clear,\n  },\n};\n\nexport default API;","export const CONFIG = {\n  BASESUF: window.BASESUF || ''\n};\n\nexport default CONFIG;","import React from 'react';\nimport API, { ROUTES } from '../api';\nimport { NavLink } from 'react-router-dom';\nimport CONFIG from '../config';\nconst MIN = 0, MAX = 4, MARKERS = ['676x676', '676x849', '923x568', '923x602'];\n\nexport class Desktop extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      count: 0\n    }\n  }\n  onClickPrev = () => {\n    let { count } = this.state;\n    if (count === MIN) return false;\n    if (--count >= MIN) this.setState({ count })\n  }\n\n  onClickNext = () => {\n    let { count } = this.state;\n    if (count === MAX - 1) return false;\n    if (++count < MAX) this.setState({ count })\n  }\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"header\">\n          <img alt=\"\" src=\"./img/logo.png\" />\n        </div>\n        <div className=\"fullSpace\">\n          <div className=\"markerWrapper\">\n            <div className={API.setClasses(['marker', `marker_${count}`])}>\n              <img className=\"marker__img\" alt=\"\" src={`/marker/${MARKERS[count]}/${MARKERS[count]}.png`} />\n              <img className=\"marker__qrcode\" alt=\"\" src=\"\" />\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <div className={API.setClasses(['button'], {\n              button_disabled: count === MIN\n            })} onClick={this.onClickPrev}>Пред. Макет</div>\n            <div className={API.setClasses(['button'], {\n              button_disabled: count === MAX - 1\n            })} onClick={this.onClickNext}>Сл. Макет</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Desktop;","import React from 'react';\nimport API from '../api';\n\nexport function Overlay(props) {\n  const { children, onClose, className } = props;\n\n  return (\n    <div className={API.setClasses(['overlay', className])}>\n      <div className=\"overlay__closer\" onClick={onClose} />\n      {children}\n    </div>\n  )\n}\n\nOverlay.defaultProps = {\n  className: '',\n  onClose: () => false\n}\n\nexport default Overlay;","import React from 'react';\nimport Overlay from './overlay';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport API from '../api';\n\nexport class Preloader extends React.Component {\n  onClose = () => {\n    const { isActiveName, onClose } = this.props;\n    let state = { [isActiveName]: false };\n    if (onClose) {\n      onClose(state)\n    }\n    else {\n      this.props.setRedux(state)\n    }\n  }\n\n  render() {\n    const { isActive, className } = this.props;\n\n    if (!isActive) return false;\n    return Preloader.html({ className })\n  }\n}\n\nPreloader.defaultProps = {\n  isActive: true,\n  isActiveName: '',\n  onClose: false,\n  className: \"\"\n}\n\nPreloader.html = ({ className }) => (\n  <Overlay className={className}>\n    <div className='preloader'>\n      <FontAwesomeIcon icon={faSpinner} spin size=\"3x\" />\n    </div>\n  </Overlay>\n)\n\nexport default API.connect(Preloader, ['']);","import Header from './header';\nimport Overlay from './overlay';\nimport Preloader from './preloader';\n\nexport const COMPONENTS = { Header, Overlay, Preloader };\n\nexport default COMPONENTS;","import React from 'react';\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <img alt=\"\" src=\"./img/logo.png\" />\n    </div>\n  )\n}","import React from 'react';\nimport COMPONENTS from '../components';\n\nconst DENIED = 'denied';\n\nexport class Mobile extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isAccess: true\n    }\n  }\n\n  permissionStatus = async () => {\n    let _state = {};\n\n    try {\n      let { state } = await navigator.permissions.query({ name: 'camera' });\n\n      switch (state) {\n        case 'prompt':\n          _state['isAccess'] = false;\n          break;\n        case DENIED:\n          _state['isAccess'] = state;\n          break;\n        default:\n          _state['isAccess'] = true;\n          break;\n      }\n    } catch (error) {\n      _state['isAccess'] = true;\n    }\n\n    this.setState(_state)\n  }\n\n  requestPermission = () => navigator.mediaDevices\n    .getUserMedia({ video: true })\n    .then(this.permissionStatus)\n    .catch(this.permissionStatus)\n\n  componentDidMount() {\n    this.permissionStatus()\n  }\n\n  renderError = () => (\n    <div className=\"request\">\n      <img className=\"request__img\" src=\"/img/error.png\" alt=\"\" />\n      <div className=\"request__text\">Вы запретили доступ к камере ранее. Включите доступ вручную</div>\n      <div className=\"button button_center\" onClick={this.requestPermission}>Проверить доступ к камере</div>\n    </div>\n  )\n\n  renderDetection = () => (\n    <>\n      {COMPONENTS.Preloader.html({ className: 'arjs-loader' })}\n      <a-scene\n        vr-mode-ui=\"enabled: false;\"\n        renderer=\"logarithmicDepthBuffer: false;\"\n        embedded\n        arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: true;\"\n      >\n        <a-nft\n          type=\"nft\"\n          url=\"./marker/676x676/676x676\"\n          smooth=\"true\"\n          smoothount=\"10\"\n          smoothtolerance=\"0.01\"\n          smooththreshold=\"5\"\n        >\n          <a-box position=\"0 0 0\" width=\"100\" height=\"100\" material='color: red;'></a-box>\n        </a-nft>\n        <a-entity camera></a-entity>\n      </a-scene>\n    </>\n  )\n\n  renderRequest = () => (\n    <div className=\"request\">\n      <img className=\"request__img\" src=\"/img/error.png\" alt=\"\" />\n      <div className=\"request__text\">К сожалению, без камеры, вы не сможете посмотреть свое видео</div>\n      <div className=\"button button_center\" onClick={this.requestPermission}>Дать доступ к камере</div>\n    </div>\n  )\n\n  render() {\n    const { isAccess } = this.state;\n    return (\n      <div className=\"page page_camera\">\n        {/* <COMPONENTS.Header /> */}\n        {isAccess ? (isAccess === DENIED ? this.renderError() : this.renderDetection()) : this.renderRequest()}\n      </div>\n    )\n  }\n}\n\nexport default Mobile;","import Desktop from './desktop';\nimport Mobile from './mobile';\nimport Main from './main';\n\nexport const PAGES = { Desktop, Mobile, Main };\n\nexport default PAGES;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { ROUTES } from '../api';\nimport COMPONENTS from '../components';\nimport CONFIG from '../config';\n\nexport class Main extends React.Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <COMPONENTS.Header />\n        <div className=\"fullSpace\">\n          <div className=\"buttons\">\n            <NavLink className=\"button\" to={CONFIG.BASESUF + ROUTES.Desktop.path}>ПК</NavLink>\n            <NavLink className=\"button\" to={CONFIG.BASESUF + ROUTES.Mobile.path}>Мобильный</NavLink>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport API, { ROUTES } from './api';\nimport CONFIG from './config';\nimport PAGES from './pages';\nimport COMPONENTS from './components';\nimport { isBrowser } from \"react-device-detect\";\n\nconst PRELOADERNAME = 'isPreloader';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app\">\n        <COMPONENTS.Preloader\n          isActive={this.props[PRELOADERNAME]}\n          isActiveName={PRELOADERNAME}\n        />\n        {isBrowser ? <PAGES.Desktop /> : <PAGES.Mobile />}\n\n        {/* <Router>\n          <Switch>\n            {Object.keys(ROUTES).map(name => (\n              <Route\n                exact\n                {...ROUTES[name]}\n                path={CONFIG.BASESUF + ROUTES[name].path}\n                key={name}\n                component={PAGES[name] ? PAGES[name] : false}\n              />\n            ))}\n          </Switch>\n        </Router> */}\n      </div>\n    )\n  }\n}\n\nexport default API.connect(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport './scss/index.scss';\nimport App from './js/App';\nimport * as serviceWorker from './serviceWorker';\nimport REDUX from './js/redux';\nimport 'md-gum-polyfill';\n\nconst store = createStore(REDUX.reducers, REDUX.initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({ trace: true }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}